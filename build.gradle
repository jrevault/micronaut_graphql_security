plugins {
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id 'application'
    id 'java'
    id 'net.ltgt.apt-idea' version '0.20'
    id "nebula.integtest" version "6.0.3"
    id 'de.undercouch.download' version '4.0.0'
}

group "fr.quidquid.micronaut.gqlsecu"
sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jcenter.bintray.com' }
    maven { url 'https://jitpack.io' }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    // GENERIC DEPENDENCIES
    annotationProcessor platform("io.micronaut:micronaut-bom:2.1.0")
    annotationProcessor "io.micronaut:micronaut-inject-java:2.1.0"
    annotationProcessor "io.micronaut:micronaut-validation:2.1.0"
    annotationProcessor "io.micronaut.configuration:micronaut-openapi:1.3.3"
    annotationProcessor "io.micronaut.data:micronaut-data-processor"
    annotationProcessor "io.micronaut.security:micronaut-security-annotations"

    implementation platform("io.micronaut:micronaut-bom:2.1.0")

    implementation 'com.auth0:java-jwt:3.8.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.1'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation "io.micronaut:micronaut-aop:2.1.0"
    implementation "io.micronaut:micronaut-http-client:2.1.0"
    implementation "io.micronaut:micronaut-http-server-netty:2.1.0"
    implementation "io.micronaut:micronaut-inject:2.1.0"
    implementation "io.micronaut:micronaut-management:2.1.0"
    implementation "io.micronaut:micronaut-runtime:2.1.0"
    implementation "io.micronaut:micronaut-spring:2.0.1"
    implementation "io.micronaut:micronaut-validation:2.1.0"
    implementation "io.micronaut.graphql:micronaut-graphql:2.1.0"
    implementation "io.micronaut.security:micronaut-security-annotations"
    implementation "io.micronaut.security:micronaut-security-jwt:2.1.0"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    // UNIT TESTING
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:2.1.0")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation platform("io.micronaut:micronaut-bom:2.1.0")
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

}

mainClassName = "${project.group}.Application"
run.classpath += configurations.developmentOnly
test.classpath += configurations.developmentOnly

def appOverride = project.file("application-local-override.yml").absolutePath
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', "-Dmicronaut.config.files=${appOverride}")

shadowJar {
    mergeServiceFiles()
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

